@using KingOffice.Resources;
@{
    ViewBag.Title = "Tạo hồ sơ";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@model String

<div class="main-content-inner">
    <div class="breadcrumbs" id="breadcrumbs">
        <ul class="breadcrumb">
            <li>
                <i class="fa fa-caret-right"></i>
                <a href="#">Tạo hợp đồng</a>
            </li>
        </ul>
    </div>
    <div class="page-content" id="panel_body">
        <div class="row">
            <div class="col-xs-12">
                <h3 class="header smaller lighter blue">1.Thông tin khách hàng:</h3>
                <form class="form-horizontal" role="form">
                    <div class="form-group">
                        <label for="form-field-1" class="col-sm-2 control-label no-padding-right">Họ và tên <span class="required">(*)</span> </label>
                        <div class="col-sm-4">
                            <input type="text" id="txtHoTen" placeholder="Nhập họ tên" class="form-control">
                        </div>
                        <label for="form-field-1" class="col-sm-2 control-label no-padding-right">Ngày nhận đơn đề nghị<span class="required">(*)</span></label>
                        <div class="col-sm-4">
                            <div class="input-group">
                                <input class="form-control date-picker" id="txtToDate" />
                                <span class="input-group-addon">
                                    <i class="fa fa-calendar bigger-110"></i>
                                </span>
                            </div>
                        </div>

                    </div>
                    <div class="form-group">
                        <label for="form-field-1" class="col-sm-2 control-label no-padding-right">Ngày tháng năm sinh<span class="required">(*)</span> </label>
                        <div class="col-sm-4">
                            <div class="input-group">
                                <input class="form-control date-picker" id="txtBirthDay" />
                                <span class="input-group-addon">
                                    <i class="fa fa-calendar bigger-110"></i>
                                </span>
                            </div>
                        </div>

                        <div class="col-sm-4">

                        </div>
                    </div>
                    <div class="form-group">
                        <label for="form-field-1" class="col-sm-2 control-label no-padding-right">Điện thoại khách hàng<span class="required">(*)</span> </label>
                        <div class="col-sm-4">
                            <input type="text" id="txtDienThoai" placeholder="Nhập số điện thoại khách hàng" class="form-control">
                        </div>
                        <label for="form-field-1" class="col-sm-2 control-label no-padding-right">Điện thoại nhân viên</label>
                        <div class="col-sm-4">
                            <input type="text" id="txtDienThoai2" placeholder="Nhập số điện thoại nhân viên" class="form-control">
                        </div>
                    </div>
                    <div class="form-group">
                        <label for="form-field-1" class="col-sm-2 control-label no-padding-right">Số CMND/CCCD<span class="required">(*)</span></label>
                        <div class="col-sm-4">
                            <input type="text" id="txtCMND" placeholder="Nhập số CMND" class="form-control" />
                        </div>
                        <label class="col-sm-2 control-label no-padding-right">Ngày cấp CMND/CCCD<span class="required">(*)</span></label>
                        <div class="col-sm-4">
                            <div class="input-group">
                                <input class="form-control date-picker" id="txtCmndDay" />
                                <span class="input-group-addon">
                                    <i class="fa fa-calendar bigger-110"></i>
                                </span>
                            </div>
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="col-sm-2 control-label no-padding-right">Giới tính</label>
                        <div class="col-sm-4">
                            <select id="ddlGioiTinh" class="chosen-select form-control">
                                <option value="1">Nam</option>
                                <option value="2">Nữ</option>
                            </select>
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="col-sm-2 control-label no-padding-right">Tỉnh/TP<span class="required">(*)</span></label>
                        <div class="col-sm-4">
                            <select id="ddlProvince" class="chosen-select form-control" data-placeholder="Chọn tỉnh thành phố">
                                <option value="0"></option>
                            </select>
                        </div>
                        <label class="col-sm-2 control-label no-padding-right">Quận/huyện<span class="required">(*)</span></label>
                        <div class="col-sm-4">
                            <select id="ddlDistrict" class="chosen-select form-control" data-placeholder="Chọn quận huyện">
                                <option value="0"></option>
                            </select>
                        </div>
                    </div>
                    <div class="form-group">
                        <label for="form-field-1" class="col-sm-2 control-label no-padding-right">Địa chỉ<span class="required">(*)</span></label>
                        <div class="col-sm-10">
                            <textarea type="text" id="txtDiaChi" placeholder="Nhập địa chỉ" class="form-control"></textarea>
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="col-sm-2 control-label no-padding-right">Sale Code</label>
                        <div class="col-sm-4">
                            <select id="ddlSaleCode" class="chosen-select form-control" data-placeholder="Chọn Sale Code">
                                <option value="0"></option>
                            </select>
                        </div>
                        <label for="form-field-1" class="col-sm-2 control-label no-padding-right">Tên nhân viên</label>
                        <div class="col-sm-4">
                            <input type="text" id="txtTenNV" data-toggle-tt="tooltip" placeholder="Tên nhân viên" class="form-control" />
                        </div>
                    </div>
                    <div class="form-group">
                        <label for="form-field-1" class="col-sm-2 control-label no-padding-right">Data Entry Code</label>
                        <div class="col-sm-4">
                            <select id="ddlCourier" class="chosen-select form-control" data-placeholder="Chọn Data Entry code">
                                <option value="0"></option>
                            </select>
                        </div>
                    </div>
                </form>
            </div>
        </div>
        <div class="row">
            <div class="col-xs-12">
                <h3 class="header smaller lighter blue">2.Thông tin khoản vay và sản phẩm:</h3>
                <form class="form-horizontal" role="form">
                    <div class="form-group">
                        <label class="col-sm-2 control-label no-padding-right">Tên ngân hàng<span class="required">(*)</span></label>
                        <div class="col-sm-4">
                            <select id="ddlDoiTac" class="chosen-select form-control" data-placeholder="Chọn đối tác">
                                <option value="0"></option>
                            </select>
                        </div>
                        <label class="col-sm-2 control-label no-padding-right">Sản phẩm vay<span class="required">(*)</span></label>
                        <div class="col-sm-4">
                            <select id="ddlSanPhamVay" class="chosen-select form-control" data-placeholder="Chọn sản phẩm vay">
                                <option value="0"></option>
                            </select>
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-sm-4  col-md-offset-2">
                            <div class="checkbox">
                                <label>
                                    <input name="form-field-checkbox" id="cbbaohiem" type="checkbox" class="ace">
                                    <span class="lbl">Không đề nghị mua bảo hiểm dư TD cá nhân</span>
                                </label>
                            </div>
                        </div>
                        <label style="display:none" for="form-field-1" class="col-sm-2 control-label no-padding-right">Tên cửa hàng<span class="required">(*)</span></label>
                        <div class="col-sm-4" style="display:none">
                            <input type="text" id="txtTenCuaHang" placeholder="Nhập tên của hàng" class="form-control" />
                        </div>
                    </div>
                    <div class="form-group">
                        <label for="form-field-1" class="col-sm-2 control-label no-padding-right">Số tiền đề nghị vay<span class="required">(*)</span></label>
                        <div class="col-sm-4">
                            <input type="text" id="txtTienDeNghiVay" placeholder="Nhập số tiền đề nghị vay" class="form-control">
                        </div>
                        <label class="col-sm-2 control-label no-padding-right">Thời hạn vay</label>
                        <div class="col-sm-4">
                            <input type="text" id="spnThoiHanVay" />
                        </div>
                    </div>
                </form>
            </div>
        </div>
        <div class="row">
            <div class="col-xs-12">
                <h3 class="header smaller lighter blue">3.Hồ sơ đính kèm:</h3>
                <div class="row">
                    <div class="col-xs-12" style="overflow-y: scroll;max-height:400px;">
                        <form class="form-horizontal" role="form" id="lstTailieu"></form>
                    </div>
                </div>

            </div>

        </div>


        <div class="row">
            <div class="col-xs-12">
                <hr />
                <form class="form-horizontal">
                    <h4 class="header lighter orange"><i class="ace-icon fa fa-bell"></i>Ghi chú hồ sơ</h4>
                    <div class="form-group">
                        <label class="col-sm-1  col-xs-12 control-label no-padding-right" for="form-field-1">Ghi chú</label>
                        <div class="col-md-11 col-sm-12 col-xs-12">
                            <textarea class="form-control" id="txtGhiChu" style="margin: 0px -4.5px 0px 0px; height: 50px;" placeholder="Nhập ghi chú"></textarea>
                        </div>
                    </div>
                    <div class="pull-right">
                        <a class="btn btn-sm btn-primary" id="btn_Temp">
                            Lưu tạm
                        </a>
                        <a class="btn btn-sm btn-primary" id="btn_Save">
                            Nộp hồ sơ
                        </a>
                        @*<a class="btn btn-sm btn-primary" href="/HoSo/AddNew" id="btn_addNew">
                                Tạo mới
                            </a>*@
                    </div>
                </form>
            </div>
            <div class="col-xs-12">
                <div class="col-md-8 activity-log">
                    <div class="timline-addNote only-new-note">
                        <div class="timeline-date-event timline-date-event--margin mt-0" id="dsGhichu">


                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <script>
        var hoso = {
            
        };
        let filesUpload = [];
        var lstFile = null;
        $(document).ready(function e() {

            setTimeout(function () {
                $('#sidebar li[id="4"]').addClass('active');
            }, 500);
            $('#ddlSanPhamVay').chosen({ width: '100%', allow_single_deselect: true });
            $('#ddlCourier').chosen({ width: '100%', allow_single_deselect: true });
            $('#ddlHuyen').chosen({ width: '100%', allow_single_deselect: true });
            $('#ddlTinh').chosen({ width: '100%', allow_single_deselect: true });
            setDateTimeInput('#txtToDate', true, 1)
            setDateTimeInput('#txtBirthDay',true,0)
            setDateTimeInput('#txtCmndDay',true,0)
            $("#txtDienThoai").ForceNumericOnly();
            $("#txtDienThoai2").ForceNumericOnly();
            $("#txtTienDeNghiVay").ForceNumericOnly();
            $("#txtCMND").ForceNumericOnly();
            $("#txtTienDeNghiVay").change(function () {
                $("#txtTienDeNghiVay").val(formatCurrency($("#txtTienDeNghiVay").val().replace(/\./g, '')));
            });
            LayDSTaiLieu();
            getPartners('#ddlDoiTac');
            $('#ddlDoiTac').on('change', function () {
                setTimeout(function () {

                    getProductByPartnetId($('#ddlDoiTac').val(), '#ddlSanPhamVay', hoso.SanPhamVay);
                }, 500);

            });
            getProvinces("#ddlProvince");
            $('#ddlProvince').on('change', function () {
                getDistricts(this.value, "#ddlDistrict", 0);
            });
            LayDSCourier();

            getSalesCode("#ddlSaleCode");
            $('#ddlSaleCode').on('change', function () {
                $('#txtTenNV').val($('option:selected', this).attr('fullname'));
            });
        });


    $('#spnThoiHanVay').ace_spinner({ value: 0, min: 0, max: 36, step: 3, btn_up_class: 'btn-info', btn_down_class: 'btn-info' })
				.closest('.ace-spinner')
				.on('changed.fu.spinbox', function () {
				    //alert($('#spinner1').val())
				});

    function LayDSCourier() {
        $.ajax({
            type: "GET",
            url: '/employee/courier',
            data: {},
            success: function (data) {
                $('#ddlCourier').empty();
                $('#ddlCourier').append("<option value='0'></option>");
                if (data != null) {
                    $.each(data.data, function (index, optionData) {
                        $('#ddlCourier').append("<option value='" + optionData.ID + "'>" + optionData.FullText + "</option>");
                    });
                }
                $('#ddlCourier').chosen().trigger("chosen:updated");
            },
            complete: function () {
            },
            error: function (jqXHR, exception) {
                showError(jqXHR, exception);
            }
        });
    }

        //function generateAttachFile(item) {
        //    let key = parseInt($(item).attr("key"));
        //    let fileId = getNewGuid();
        //    $(item).fileinput({

        //        uploadUrl: '/media/uploadtemp/' + key,
        //        validateInitialCount: true,
        //        maxFileSize: 25 * 1024,
        //        msgSizeTooLarge: 'File "{name}" (<b>{size} KB</b>)'
        //            + 'exceeds maximum allowed upload size of <b>{25} MB</b>. '
        //            + 'Please retry your upload!',
        //        allowedFileExtensions: ['png', 'jpg', 'pdf'],
        //        initialPreviewAsData: true, // identify if you are sending preview data only and not the raw markup
        //        initialPreviewFileType: 'image',

        //        showUpload: false,
        //        showUploadedThumbs: false,
        //        uploadAsync: false,
        //        showClose: false,
        //        showCaption: false,
        //        showBrowse: false,
        //        showUpload: false, // hide upload button
        //        showRemove: false, // hide remove button
        //        browseOnZoneClick: true,
        //        removeLabel: '',
        //        fileId: fileId,
        //        btnDeleteId: 'btn-remove-file-' + fileId,
        //        dropZoneTitle: 'Kéo và thả tập tin vào đây',
        //        dropZoneClickTitle: '<br>(hoặc nhấp để chọn)',
        //        removeIcon: '<i class="glyphicon glyphicon-remove" id ="' + "btn-remove-" + key + '"></i>',
        //        removeTitle: 'Cancel or reset changes',
        //        elErrorContainer: '#kv-avatar-errors-2',
        //        msgErrorClass: 'alert alert-block alert-danger',
        //        //layoutTemplates: { main2: '{preview} ' + btnCust + ' {remove} {browse}' },
        //        //layoutTemplates: { footer: '' },
        //        overwriteInitial: false,
        //        append: false

        //    }).on("filebatchselected", function (event, files) {

        //    }).on("filebeforedelete", function (event, key, fileId) {

        //    }).on('filebatchuploadsuccess', function (event, data) {

        //    });


        //}
        function onDeleteFile(key, fileId, isExist) {
            removeFile(key, fileId);
        }
        function onUploadFile(key, fileId, data, isExist) {

            if (isReach5Files(filesUpload, key))
                return;
            let response = data;
            if (isNullOrNoItem(filesUpload)) {
                filesUpload = []
            }
            let file = {
                Key: parseInt(response.initialPreviewConfig[0].key),
                FileName: response.initialPreviewConfig[0].caption,
                FileUrl: response.initialPreview,
                KeyName: "",
                Id: fileId
            }
            let existKeyIndex = filesUpload.findIndex(p => p.key == key)
            if (existKeyIndex < 0) {
                filesUpload.push({ key: parseInt(key), files: [file] })
            }
            else {
                if (filesUpload[existKeyIndex].files == null)
                    filesUpload[existKeyIndex].files = []
                filesUpload[existKeyIndex].files.push(file);
            }
            if (isReach5Files(filesUpload, key) === false) {
                let newAttachhFileId = getNewGuid();
                renderOneItemFile(key, newAttachhFileId, '', false, 'mt-46', true, [], [], true, false, onUploadFile, onDeleteFile, filesUpload);
            }
        }
        function removeFile(key, fileId) {
            if (isNullOrNoItem(filesUpload))
                return;
            let index = filesUpload.findIndex(p => p.key == key);
            if (index >= 0) {
                if (!isNullOrNoItem(filesUpload[index].files)) {
                    let indexOfFile = filesUpload[index].files.findIndex(p => p.Id == fileId);
                    if (indexOfFile >= 0)
                        filesUpload[index].files.splice(indexOfFile, 1);
                }
            }
        }

    function LayDSTaiLieu() {
        $.ajax({
            type: "GET",
            url: '/hoso/tailieu',
            success: function (data) {
                if (data.data != null)
                {
                    let keys = [];
                    $.each(data.data, function (index, item) {
                        $("#lstTailieu").append("<div class='form-group'><div id='tailieu-" + item.ID + "'></div></div > ");
                        let name = '',
                            className = ''
                        if (keys.indexOf(item.ID) < 0) {
                            name = item.Ten;
                        }
                        else {
                            className = 'mt-46'
                        }
                        
                        renderOneItemFile(item.ID, item.ID, name, item.BatBuoc, className, true, [], [], true, false, onUploadFile, onDeleteFile, filesUpload);
                        keys.push(item.ID);
                    });

                }

            },
            complete: function () {
            },
            error: function (jqXHR, exception) {
                showError(jqXHR, exception);
            }
        });
        }


        function getModel() {
            hoso.CustomerName = $('#txtHoTen').val();
            hoso.Phone = $('#txtDienThoai').val();
            hoso.Phone2 = $('#txtDienThoai2').val();
            hoso.NgayNhandon = convertDMYToMDYFromStr($('#txtToDate').val());
            hoso.Cmnd = $('#txtCMND').val();
            hoso.Gender = parseInt($('#ddlGioiTinh').val());
            hoso.DistrictId = parseInt($('#ddlDistrict').val());
            hoso.Address = $('#txtDiaChi').val();
            hoso.CourierId = parseInt($('#ddlCourier').val());
            hoso.ProductId = parseInt($('#ddlSanPhamVay').val());
            hoso.IsBaohiem = $('#cbbaohiem').is(":checked") == false ? 0 : 1;
            hoso.Thoihanvay = parseInt($('#spnThoiHanVay').val());
            hoso.Comment = $('#txtGhiChu').val();
            hoso.PartnerId = parseInt($('#ddlDoiTac').val());
            hoso.files = null;
            hoso.BirthDay = convertDMYToMDYFromStr($("#txtBirthDay").val()),
                hoso.CmndDay = convertDMYToMDYFromStr($("#txtCmndDay").val()),
                hoso.Status = !isNullOrUndefined($('#ddlTrangThai').val()) ? parseInt($('#ddlTrangThai').val()): $('#ddlTrangThai').val(),
                hoso.Result = !isNullOrUndefined($('#ddlKetQua').val()) ? parseInt($('#ddlKetQua').val()): $('#ddlKetQua').val(),
            hoso.BorrowAmount = isNullOrWhiteSpace($('#txtTienDeNghiVay').val().replace(/\./g, '')) ? 0 : parseFloat($('#txtTienDeNghiVay').val().replace(/\./g, ''));
            return hoso;
        }
    $('#btn_Temp').click(function (e) {
        let model = getModel();
        if (isNullOrUndefined(hoso))
            return;
        if (isNullOrWhiteSpace(model.CustomerName)) {
            swal({
                title: "@Html.Raw(Global.Message_Title)",
                text: "Vui lòng nhập tên",
                type: "error",
                timer: 4000,
                showConfirmButton: true,
            });
            return;
        }
        if (model.PartnerId <= 0 || isNullOrUndefined(model.PartnerId)) {
            swal({
                title: "@Html.Raw(Global.Message_Title)",
                text: "Vui lòng chọn đối tác",
                type: "error",
                timer: 4000,
                showConfirmButton: true,
            });
            return;
        }
        if (model.ProductId <= 0 || isNullOrUndefined(model.ProductId)) {
            swal({
                title: "@Html.Raw(Global.Message_Title)",
                text: "Vui lòng chọn sản phẩm vay",
                type: "error",
                timer: 4000,
                showConfirmButton: true,
            });
            return;
        }
        model.FileRequireIds =[]

        $.ajax({
            traditional: true,
            url: '/hoso/draft',
            type: "POST",
            contentType: "application/json;",
            dataType: 'json',
            data: JSON.stringify(model),
            success: function (data) {
                if (data.success == true && data.data > 0) {
                    swal({
                        title: "@Html.Raw(Global.Message_Title)",
                        text: 'Thành công',
                        type: "success",
                        timer: 4000,
                        showConfirmButton: true,
                    }, function () {
                            hoso.Id = data.data;
                            renderGhichu(hoso.Ghichu)
                            hoso.Ghichu =''
                            $("#txtGhiChu").val('')
                            uploadHoso2(hoso.Id)
                    });

                }
                else {
                    swal({
                        title: "@Html.Raw(Global.Message_Title)",
                        text: data.error.code,
                        type: "error",
                        timer: 4000,
                        showConfirmButton: true,
                    });
                }

            },
            error: function (jqXHR, exception) {
                showError(jqXHR, exception);
            },
            complete: function () {
                $('#panel_body').unblock();
            },
        });

    });

    $('#btn_Save').click(function (e) {
        let model = getModel();
        if (isNullOrUndefined(hoso))
            return;
        if (isNullOrWhiteSpace(model.CustomerName)) {
            swal({
                title: "@Html.Raw(Global.Message_Title)",
                text: "Vui lòng nhập họ tên",
                type: "error",
                timer: 4000,
                showConfirmButton: true,
            });
            return;
        }
        if (model.PartnerId == 0 || isNullOrUndefined(model.PartnerId)) {
            swal({
                title: "@Html.Raw(Global.Message_Title)",
                text: "Vui lòng chọn đối tác",
                type: "error",
                timer: 4000,
                showConfirmButton: true,
            });
            return;
        }
        if (model.ProductId == 0 || isNullOrUndefined(model.ProductId)) {
            swal({
                title: "@Html.Raw(Global.Message_Title)",
                text: "Vui lòng chọn sản phẩm vay",
                type: "error",
                timer: 4000,
                showConfirmButton: true,
            });
            return;
        }


        if (isNullOrWhiteSpace(model.Phone)
            || model.Phone.length != 10) {
            swal({
                title: "@Html.Raw(Global.Message_Title)",
                text: "Số điện thoại di động phải đúng 10 số!",
                type: "error",
                timer: 4000,
                showConfirmButton: true,
            });
            return;
        }
        if (isNullOrWhiteSpace(model.Phone2)
            || model.Phone2.length != 10) {
            swal({
                title: "@Html.Raw(Global.Message_Title)",
                text: "Số điện thoại nhân viên phải đúng 10 số!",
                type: "error",
                timer: 4000,
                showConfirmButton: true,
            });
            return;
        }
        if (isNullOrWhiteSpace(model.Cmnd) ||
            (model.Cmnd.length != 9 && model.Cmnd.length != 12)) {
            swal({
                title: "@Html.Raw(Global.Message_Title)",
                text: "Số CMND chỉ 9 hoặc 12 số!",
                type: "error",
                timer: 4000,
                showConfirmButton: true,
            });
            return;
        }
        model.FileRequireIds = [];
        model.FileRequireIds = filesUpload.map(p => model.FileRequireIds.push(p.key));
        
        $.ajax({
            traditional: true,
            url: '/hoso/submit',
            type: "POST",
            contentType: "application/json;",
            dataType: 'json',
            data: JSON.stringify(model),
            success: function (data) {
                if (data.success == true && data.data>0) {
                    swal({
                        title: "@Html.Raw(Global.Message_Title)",
                        text: "Thành công",
                        type: "success",
                        timer: 4000,
                        showConfirmButton: true,
                    }, function () {
                            hoso.Id = data.data
                            uploadHoso2(hoso.Id, true);
                    });
                }
                else {
                    swal({
                        title: "@Html.Raw(Global.Message_Title)",
                        text: data.error.code,
                        type: "error",
                        timer: 4000,
                        showConfirmButton: true,
                    });
                }
            },
            error: function (jqXHR, exception) {
                showError(jqXHR, exception);
            },
            complete: function () {
                $('#panel_body').unblock();
            },
        });
    });
     function uploadHoso2(hosoId, reloadOnSuccess = false) {
            if (isNullOrNoItem(filesUpload))
                return;
            $.ajax({
                traditional: true,
                url: `/HoSo/UploadHoso/${hosoId}/true`,
                type: "POST",
                contentType: "application/json;",
                dataType: 'json',
                data: JSON.stringify(filesUpload),
                success: function (data) {
                    if (data.success == true) {
                        if (reloadOnSuccess == true) {
                            window.location = window.location;
                        }
                }
                else {
                    swal({
                        title: "@Html.Raw(Global.Message_Title)",
                        text: data.code,
                        type: "error",
                        timer: 4000,
                        showConfirmButton: true,
                    });
                }
            },
            error: function (jqXHR, exception) {
                showError(jqXHR, exception);
            },
            complete: function () {
                $('#panel_body').unblock();
            },
        });
        }
    </script>
