@using KingOffice.Resources;
@{
    ViewBag.Title = "Tạo hồ sơ";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@model String

<div class="main-content-inner">
    <div class="breadcrumbs" id="breadcrumbs">
        <ul class="breadcrumb">
            <li>
                <i class="fa fa-caret-right"></i>
                <a href="#">Tạo hợp đồng</a>
            </li>
        </ul>
    </div>
    <div class="page-content" id="panel_body">
        <div class="row">
            <div class="col-xs-12">
                <h3 class="header smaller lighter blue">1.Thông tin khách hàng:</h3>
                <form class="form-horizontal" role="form">
                    <div class="form-group">
                        <label for="form-field-1" class="col-sm-2 control-label no-padding-right">Họ và tên <span class="required">(*)</span> </label>
                        <div class="col-sm-4">
                            <input type="text" id="txtHoTen" placeholder="Nhập họ tên" class="form-control">
                        </div>
                        <label for="form-field-1" class="col-sm-2 control-label no-padding-right">Ngày nhận đơn đề nghị<span class="required">(*)</span></label>
                        <div class="col-sm-4">
                            <div class="input-group">
                                <input class="form-control date-picker" id="txtToDate" />
                                <span class="input-group-addon">
                                    <i class="fa fa-calendar bigger-110"></i>
                                </span>
                            </div>
                        </div>

                    </div>
                    <div class="form-group">
                        <label for="form-field-1" class="col-sm-2 control-label no-padding-right">Điện thoại khách hàng<span class="required">(*)</span> </label>
                        <div class="col-sm-4">
                            <input type="text" id="txtDienThoai" placeholder="Nhập số điện thoại khách hàng" class="form-control">
                        </div>
                        <label for="form-field-1" class="col-sm-2 control-label no-padding-right">Điện thoại nhân viên</label>
                        <div class="col-sm-4">
                            <input type="text" id="txtDienThoai2" placeholder="Nhập số điện thoại nhân viên" class="form-control">
                        </div>
                    </div>
                    <div class="form-group">
                        <label for="form-field-1" class="col-sm-2 control-label no-padding-right">Số CMND<span class="required">(*)</span></label>
                        <div class="col-sm-4">
                            <input type="text" id="txtCMND" placeholder="Nhập số CMND" class="form-control" />
                        </div>
                        <label class="col-sm-2 control-label no-padding-right">Giới tính</label>
                        <div class="col-sm-4">
                            <select id="ddlGioiTinh" class="chosen-select form-control">
                                <option value="1">Nam</option>
                                <option value="2">Nữ</option>
                            </select>
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="col-sm-2 control-label no-padding-right">Tỉnh/TP<span class="required">(*)</span></label>
                        <div class="col-sm-4">
                            <select id="ddlTinh" class="chosen-select form-control" data-placeholder="Chọn tỉnh thành phố">
                                <option value="0"></option>
                            </select>
                        </div>
                        <label class="col-sm-2 control-label no-padding-right">Quận/huyện<span class="required">(*)</span></label>
                        <div class="col-sm-4">
                            <select id="ddlHuyen" class="chosen-select form-control" data-placeholder="Chọn quận huyện">
                                <option value="0"></option>
                            </select>
                        </div>
                    </div>
                    <div class="form-group">
                        <label for="form-field-1" class="col-sm-2 control-label no-padding-right">Địa chỉ<span class="required">(*)</span></label>
                        <div class="col-sm-10">
                            <textarea type="text" id="txtDiaChi" placeholder="Nhập địa chỉ" class="form-control"></textarea>
                        </div>
                    </div>
                    @*<div class="form-group">
                        <label class="col-sm-2 control-label no-padding-right">Sale Code</label>
                        <div class="col-sm-4">
                            <select id="ddlInternalCode" class="chosen-select form-control" data-placeholder="Chọn Sale Code">
                                <option value="0"></option>
                            </select>
                        </div>
                        <label for="form-field-1" class="col-sm-2 control-label no-padding-right">Tên nhân viên</label>
                        <div class="col-sm-4">
                            <input type="text" id="txtTenNV" data-toggle-tt="tooltip" placeholder="Tên nhân viên" class="form-control" />
                        </div>
                    </div>*@
                    <div class="form-group">
                        <label for="form-field-1" class="col-sm-2 control-label no-padding-right">Courier Code</label>
                        <div class="col-sm-4">
                            <select id="ddlCourier" class="chosen-select form-control" data-placeholder="Chọn courier code">
                                <option value="0"></option>
                            </select>
                        </div>
                    </div>
                </form>
            </div>
        </div>
        <div class="row">
            <div class="col-xs-12">
                <h3 class="header smaller lighter blue">2.Thông tin khoản vay và sản phẩm:</h3>
                <form class="form-horizontal" role="form">
                    <div class="form-group">
                        <label class="col-sm-2 control-label no-padding-right">Tên ngân hàng<span class="required">(*)</span></label>
                        <div class="col-sm-4">
                            <select id="ddlDoiTac" class="chosen-select form-control" data-placeholder="Chọn đối tác">
                                <option value="0"></option>
                            </select>
                        </div>
                        <label class="col-sm-2 control-label no-padding-right">Sản phẩm vay<span class="required">(*)</span></label>
                        <div class="col-sm-4">
                            <select id="ddlSanPhamVay" class="chosen-select form-control" data-placeholder="Chọn sản phẩm vay">
                                <option value="0"></option>
                            </select>
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-sm-4  col-md-offset-2">
                            <div class="checkbox">
                                <label>
                                    <input name="form-field-checkbox" id="cbbaohiem" type="checkbox" class="ace">
                                    <span class="lbl">Không đề nghị mua bảo hiểm dư TD cá nhân</span>
                                </label>
                            </div>
                        </div>
                        <label style="display:none" for="form-field-1" class="col-sm-2 control-label no-padding-right">Tên cửa hàng<span class="required">(*)</span></label>
                        <div class="col-sm-4" style="display:none">
                            <input type="text" id="txtTenCuaHang" placeholder="Nhập tên của hàng" class="form-control" />
                        </div>
                    </div>
                    <div class="form-group">
                        <label for="form-field-1" class="col-sm-2 control-label no-padding-right">Số tiền đề nghị vay<span class="required">(*)</span></label>
                        <div class="col-sm-4">
                            <input type="text" id="txtTienDeNghiVay" placeholder="Nhập số tiền đề nghị vay" class="form-control">
                        </div>
                        <label class="col-sm-2 control-label no-padding-right">Thời hạn vay</label>
                        <div class="col-sm-4">
                            <input type="text" id="spnThoiHanVay" />
                        </div>
                    </div>
                </form>
            </div>
        </div>
        <div class="row">
            <div class="col-xs-12">
                <h3 class="header smaller lighter blue">3.Hồ sơ đính kèm:</h3>
                <div class="row">
                    <div class="col-xs-12" style="overflow-y: scroll;max-height:400px;">
                        <form class="form-horizontal" role="form" id="lstTailieu"></form>
                    </div>
                </div>

            </div>

        </div>

        
        <div class="row">
            <div class="col-xs-12">
                <hr />
                <form class="form-horizontal">
                    <h4 class="header lighter orange"><i class="ace-icon fa fa-bell"></i>Ghi chú hồ sơ</h4>
                    <div class="form-group">
                        <label class="col-sm-1  col-xs-12 control-label no-padding-right" for="form-field-1">Ghi chú</label>
                        <div class="col-md-11 col-sm-12 col-xs-12">
                            <textarea class="form-control" id="txtGhiChu" style="margin: 0px -4.5px 0px 0px; height: 50px;" placeholder="Nhập ghi chú"></textarea>
                        </div>
                    </div>
                    <div class="pull-right">
                        <a class="btn btn-sm btn-primary" id="btn_Temp">
                            Lưu tạm
                        </a>
                        <a class="btn btn-sm btn-primary" id="btn_Save">
                            Nộp hồ sơ
                        </a>
                        @*<a class="btn btn-sm btn-primary" href="/HoSo/AddNew" id="btn_addNew">
                            Tạo mới
                        </a>*@
                    </div>
                </form>
            </div>
            <div class="col-xs-12">
                <div class="col-md-8 activity-log">
                    <div class="timline-addNote only-new-note">
                        <div class="timeline-date-event timline-date-event--margin mt-0" id="dsGhichu">


                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <script>
       
        $(document).ready(function e() {

            setTimeout(function () {
                $('#sidebar li[id="4"]').addClass('active');
            }, 500);
            $('#ddlSanPhamVay').chosen({ width: '100%', allow_single_deselect: true });
            $('#ddlCourier').chosen({ width: '100%', allow_single_deselect: true });
            $('#ddlHuyen').chosen({ width: '100%', allow_single_deselect: true });
            $('#ddlTinh').chosen({ width: '100%', allow_single_deselect: true });
            $('#txtToDate').datepicker({
                dateFormat: 'dd-mm-yy'

            }).next().on(ace.click_event, function () {
                $(this).prev().focus();
            });
            $("#txtToDate").datepicker({ dateFormat: 'yy/mm/dd' }).datepicker("setDate", new Date().getDay + 0);
        });
    </script>
    <script>

        $("#txtDienThoai").ForceNumericOnly();
        $("#txtDienThoai2").ForceNumericOnly();
        $("#txtTienDeNghiVay").ForceNumericOnly();
        $("#txtCMND").ForceNumericOnly();
        $("#txtTienDeNghiVay").change(function () {
            $("#txtTienDeNghiVay").val(formatCurrency($("#txtTienDeNghiVay").val().replace(/\./g, '')));
        });
    </script>
    <script>
        let filesUpload = [];
        var lstFile = null;
    $(document).ready(function () {
        LayDSTaiLieu();
        getPartners();
        LayDSTinh();
        LayDSCourier();
        @*LayDSale('@ViewBag.MaNV');*@
        $('#ddlDoiTac').on('change', function () {
            getProductByPartnetId(this.value);
        });
        $('#ddlTinh').on('change', function () {
            LayDSHuyen(this.value);
        });
        $('#ddlInternalCode').on('change', function () {
             $('#txtTenNV').val( $('option:selected', this).attr('ten'));
        });
    });

    $('#spnThoiHanVay').ace_spinner({ value: 0, min: 0, max: 36, step: 3, btn_up_class: 'btn-info', btn_down_class: 'btn-info' })
				.closest('.ace-spinner')
				.on('changed.fu.spinbox', function () {
				    //alert($('#spinner1').val())
				});

    function LayDSTinh() {
        $.ajax({
            type: "GET",
            url: '/locations/provinces',

            success: function (data) {
                $('#ddlTinh').empty();
                $('#ddlTinh').append("<option value='0'></option>");
                if (data != null) {
                    $.each(data.data, function (index, optionData) {
                        $('#ddlTinh').append("<option value='" + optionData.ID + "'>" + optionData.Ten + "</option>");
                    });
                }
                $('#ddlTinh').chosen().trigger("chosen:updated");
            },
            complete: function () {
            },
            error: function (jqXHR, exception) {
                showError(jqXHR, exception);
            }
        });
    }

    function LayDSCourier() {
        $.ajax({
            type: "GET",
            url: '/employee/courier',
            data: {},
            success: function (data) {
                $('#ddlCourier').empty();
                $('#ddlCourier').append("<option value='0'></option>");
                if (data != null) {
                    $.each(data.data, function (index, optionData) {
                        $('#ddlCourier').append("<option value='" + optionData.ID + "'>" + optionData.FullText + "</option>");
                    });
                }
                $('#ddlCourier').chosen().trigger("chosen:updated");
            },
            complete: function () {
            },
            error: function (jqXHR, exception) {
                showError(jqXHR, exception);
            }
        });
    }

    function LayDSHuyen(maTinh) {
        $.ajax({
            type: "GET",
            url: '/locations/districts/' + maTinh,

            success: function (data) {
                $('#ddlHuyen').empty();
                $('#ddlHuyen').append("<option value='0'></option>");
                if (data != null) {
                    $.each(data.data, function (index, optionData) {
                        $('#ddlHuyen').append("<option value='" + optionData.ID + "'>" + optionData.Ten + "</option>");
                    });
                }
                $('#ddlHuyen').chosen().trigger("chosen:updated");
            },
            complete: function () {
            },
            error: function (jqXHR, exception) {
                showError(jqXHR, exception);
            }
        });
    }

    function getPartners() {
        $.ajax({
            type: "GET",
            url: '/partners',
            success: function (data) {
                $('#ddlDoiTac').empty();
                $('#ddlDoiTac').append("<option value='0'></option>");
                if (data != null) {
                    $.each(data.data, function (index, optionData) {
                        $('#ddlDoiTac').append("<option value='" + optionData.ID + "'>" + optionData.Ten + "</option>");
                    });
                }
                $('#ddlDoiTac').chosen().trigger("chosen:updated");
            },
            complete: function () {
            },
            error: function (jqXHR, exception) {
                showError(jqXHR, exception);
            }
        });
    }


    function getProductByPartnetId(maDoiTac) {

        let doitacId = parseInt(maDoiTac)
        $.ajax({
            type: "GET",
            url: `/products/${doitacId}`,
            success: function (data) {
                $('#ddlSanPhamVay').empty();
                $('#ddlSanPhamVay').append("<option value='0'></option>");
                if (data != null) {
                    $.each(data.data, function (index, optionData) {
                        $('#ddlSanPhamVay').append("<option value='" + optionData.ID + "'>" + optionData.Ten + "</option>");
                    });
                }
                $('#ddlSanPhamVay').chosen().trigger("chosen:updated");

            },
            complete: function () {
            },
            error: function (jqXHR, exception) {
                showError(jqXHR, exception);
            }
        });
    }

    function LayDSale(maNV) {
        $.ajax({
            type: "POST",
            url: '@Url.Action("LayDSSale", "HoSo")',
            data: { },
            success: function (data) {
                $('#ddlInternalCode').empty();
                $('#ddlInternalCode').append("<option value='0'></option>");
                var ten = '';
                if (data != null) {
                    $.each(data.data, function (index, optionData) {
                        $('#ddlInternalCode').append("<option  ten='" + optionData.FullName + "' value='" + optionData.IDUser + "'>" + optionData.Code + "</option>");
                    });
                }
                $('#ddlInternalCode').val(maNV);
                $('#ddlInternalCode').trigger("change");
                $('#ddlInternalCode').chosen().trigger("chosen:updated");

            },
            complete: function () {
            },
            error: function (jqXHR, exception) {
                showError(jqXHR, exception);
            }
        });
        }
        function generateAttachFile(item) {
            let key = parseInt($(item).attr("key"));
            let fileId = getNewGuid();
            $(item).fileinput({

                uploadUrl: '/media/uploadtemp/' + key,
                validateInitialCount: true,
                maxFileSize: 25 * 1024,
                msgSizeTooLarge: 'File "{name}" (<b>{size} KB</b>)'
                    + 'exceeds maximum allowed upload size of <b>{25} MB</b>. '
                    + 'Please retry your upload!',
                allowedFileExtensions: ['png', 'jpg', 'pdf'],
                initialPreviewAsData: true, // identify if you are sending preview data only and not the raw markup
                initialPreviewFileType: 'image',
                
                showUpload: false,
                showUploadedThumbs: false,
                uploadAsync: false,
                showClose: false,
                showCaption: false,
                showBrowse: false,
                showUpload: false, // hide upload button
                showRemove: false, // hide remove button
                browseOnZoneClick: true,
                removeLabel: '',
                fileId: fileId,
                btnDeleteId: 'btn-remove-file-' + fileId,
                dropZoneTitle: 'Kéo và thả tập tin vào đây',
                dropZoneClickTitle: '<br>(hoặc nhấp để chọn)',
                removeIcon: '<i class="glyphicon glyphicon-remove" id ="' + "btn-remove-" + key + '"></i>',
                removeTitle: 'Cancel or reset changes',
                elErrorContainer: '#kv-avatar-errors-2',
                msgErrorClass: 'alert alert-block alert-danger',
                //layoutTemplates: { main2: '{preview} ' + btnCust + ' {remove} {browse}' },
                //layoutTemplates: { footer: '' },
                overwriteInitial: false,
                append: false

            }).on("filebatchselected", function (event, files) {
                if (countFilesByKey(parseInt(key)) >= 5)
                    return;
                $(item).fileinput("upload");
            }).on("filebeforedelete", function (event, key, fileId) {
                removeFile(parseInt(key), fileId);
            }).on('filebatchuploadsuccess', function (event, data) {
                if (isReach5Files(key))
                    return;
                let response = data.response;
                if (isNullOrNoItem(filesUpload)) {
                    filesUpload = []
                }
                let file = {
                    Key: response.initialPreviewConfig[0].key,
                    FileName: response.initialPreviewConfig[0].caption,
                    FileUrl: response.initialPreview,
                    Id: fileId
                }
                let existKeyIndex = filesUpload.findIndex(p => p.key == key)
                if (existKeyIndex < 0) {
                    filesUpload.push({ key: parseInt(key), files: [file] })
                }
                else {
                    if (filesUpload[existKeyIndex].files == null)
                        filesUpload[existKeyIndex].files = []
                    filesUpload[existKeyIndex].files.push(file);
                }
                if (isReach5Files(key) === false) {
                    let newAttachhFileId = getNewGuid();
                    renderOneItemFile(key,newAttachhFileId ,'', false,'mt-46')
                    
                    let newAttachFile = $("#attachFile-" + newAttachhFileId)
                    generateAttachFile(newAttachFile);
                }
                
                 
            });
            
           
        }

        function removeFile(key, fileId) {
            if (isNullOrNoItem(filesUpload))
                return;
            let index = filesUpload.findIndex(p => p.key == key);
            if (index >= 0) {
                if (!isNullOrNoItem(filesUpload[index].files)) {
                    let indexOfFile = filesUpload[index].files.findIndex(p => p.Id == fileId);
                    if (indexOfFile >= 0)
                        filesUpload[index].files.splice(indexOfFile, 1);
                }
            }
        }
        function isReach5Files(key) {
            if (isNullOrWhiteSpace(key))
                return true;
            if (isNullOrNoItem(filesUpload))
                return false;
            let sameKeyFile = filesUpload.find(p => p.key == key);
            if (isNullOrUndefined(sameKeyFile))
                return false;
            if (isNullOrNoItem(sameKeyFile.files))
                return 0;
            if (sameKeyFile.files.length == 5)
                return true;
            return false;
        }
        function countFilesByKey(key) {
            if (isNullOrWhiteSpace(key))
                return 0;
            let sameKeyFile = filesUpload.find(p => p.key == key);
            if (isNullOrUndefined(sameKeyFile))
                return 0;
            if (isNullOrNoItem(sameKeyFile.files))
                return 0;
            return sameKeyFile.files.length;
        }
    function LayDSTaiLieu() {
        $.ajax({
            type: "GET",
            url: '/hoso/tailieu',
            success: function (data) {
                if (data.data != null)
                {
                    var i = 0;
                    var content = "";
                    $.each(data.data, function (index, item) {
                        $("#lstTailieu").append("<div class='form-group'><div id='tailieu-" + item.ID + "'></div></div > ");
                        renderOneItemFile(item.ID,item.ID,item.Ten,item.BatBuoc)
                    });
                    lstFile = $(".attachFile");
                    $.each(lstFile, function (index, option) {
                        generateAttachFile(option)                       
                    });
                    
                }

            },
            complete: function () {
            },
            error: function (jqXHR, exception) {
                showError(jqXHR, exception);
            }
        });
        }
        
    function removeImage() {
        alert("add remove")
    }
    var hoso = {
        ID: 0,
        MaHoSo: null,
        CourierCode: 0,
        TenKhachHang: null,
        CMND: null,
        DiaChi: null,
        MaKhuVuc: 0,
        SDT: null,
        SDT2: null,
        GioTinh: 0,
        MaNguoiTao: 0,
        HoSoCuaAi: 0,
        KetQuaHS: null,
        NgayNhanDon: null,
        MaTrangThai: 0,
        Sanphamvay: 0,
        Doitac:0,
        CoBaoHiem: 0,
        SoTienVay: 0,
        HanVay: 0,
        TenCuaHang: null,
        Ghichu: null
    };
    function renderGhichu(noidung) {
        if (isNullOrWhiteSpace(noidung))
            return
        $('#dsGhichu').prepend(
            '<div class="timeline-event-content  active">' +
                '<div class="timeline-item">' +
                    '<div class="timeline-body">' +
                        '<div class="timeline__message-container">'
                            + noidung +
            '</div></div></div></div>'

        )
    }
    function getModel() {
        hoso.TenKhachHang = $('#txtHoTen').val();
        hoso.SDT = $('#txtDienThoai').val();
        hoso.SDT2 = $('#txtDienThoai2').val();
        hoso.ngaynhandon = $('#txtToDate').val();
        hoso.CMND = $('#txtCMND').val();
        hoso.GioTinh = parseInt($('#ddlGioiTinh').val());
        hoso.MaKhuVuc = parseInt($('#ddlHuyen').val());
        hoso.DiaChi = $('#txtDiaChi').val();
        hoso.CourierCode = parseInt($('#ddlCourier').val());
        hoso.Sanphamvay = parseInt($('#ddlSanPhamVay').val());
        hoso.TenCuaHang = $('#txtTenCuaHang').val();
        hoso.CoBaoHiem = $('#cbbaohiem').is(":checked") == false ? 0 : 1;
        hoso.HanVay = parseInt($('#spnThoiHanVay').val());
        hoso.Ghichu = $('#txtGhiChu').val();
        hoso.Doitac = parseInt($('#ddlDoiTac').val());
        hoso.files = null;
        hoso.SoTienVay = isNullOrWhiteSpace($('#txtTienDeNghiVay').val().replace(/\./g, '')) ? 0 : parseFloat($('#txtTienDeNghiVay').val().replace(/\./g, ''));
        return hoso;
    }
    $('#btn_Temp').click(function (e) {
        let model = getModel();
        if (isNullOrUndefined(hoso))
            return;
        if (isNullOrWhiteSpace(model.TenKhachHang)) {
            swal({
                title: "@Html.Raw(Global.Message_Title)",
                text: "Vui lòng nhập tên",
                type: "error",
                timer: 4000,
                showConfirmButton: true,
            });
            return;
        }
        if (model.Doitac == 0 || isNullOrUndefined(model.Doitac)) {
            swal({
                title: "@Html.Raw(Global.Message_Title)",
                text: "Vui lòng chọn đối tác",
                type: "error",
                timer: 4000,
                showConfirmButton: true,
            });
            return;
        }
        if (model.Sanphamvay == 0 || isNullOrUndefined(model.Sanphamvay)) {
            swal({
                title: "@Html.Raw(Global.Message_Title)",
                text: "Vui lòng chọn sản phẩm vay",
                type: "error",
                timer: 4000,
                showConfirmButton: true,
            });
            return;
        }


        $.ajax({
            traditional: true,
            url: '/hoso/draft',
            type: "POST",
            contentType: "application/json;",
            dataType: 'json',
            data: JSON.stringify(model),
            success: function (data) {
                if (data.success == true && data.data>0) {
                    swal({
                        title: "@Html.Raw(Global.Message_Title)",
                        text: 'Thành công',
                        type: "success",
                        timer: 4000,
                        showConfirmButton: true,
                    }, function () {
                            hoso.ID = data.data;
                            renderGhichu(hoso.Ghichu)
                            hoso.Ghichu =''
                            $("#txtGhiChu").val('')
                            uploadHoso(hoso.ID)
                    });

                }
                else {
                    swal({
                        title: "@Html.Raw(Global.Message_Title)",
                        text: data.error.code,
                        type: "error",
                        timer: 4000,
                        showConfirmButton: true,
                    });
                }

            },
            error: function (jqXHR, exception) {
                showError(jqXHR, exception);
            },
            complete: function () {
                $('#panel_body').unblock();
            },
        });
        function uploadHoso(hosoId, reloadOnSuccess = false) {
            if (isNullOrNoItem(filesUpload))
                return;
            $.ajax({
                url: `/HoSo/UploadHoso/${hosoId}`,
                type: "POST",
                contentType: "application/json;",
                dataType: 'json',
                data: JSON.stringify(filesUpload),
                success: function (data) {
                    if (data.success == true) {
                        if (reloadOnSuccess == true) {
                            window.location = window.location;
                        }
                }
                else {
                    swal({
                        title: "@Html.Raw(Global.Message_Title)",
                        text: data.Message.ErrorMessage,
                        type: "error",
                        timer: 4000,
                        showConfirmButton: true,
                    });
                }
            },
            error: function (jqXHR, exception) {
                showError(jqXHR, exception);
            },
            complete: function () {
                $('#panel_body').unblock();
            },
        });
        }
    });

    $('#btn_Save').click(function (e) {
        let model = getModel();
        if (isNullOrUndefined(hoso))
            return;
        if (isNullOrWhiteSpace(model.TenKhachHang)) {
            swal({
                title: "@Html.Raw(Global.Message_Title)",
                text: "Vui lòng nhập tên",
                type: "error",
                timer: 4000,
                showConfirmButton: true,
            });
            return;
        }
        if (model.Doitac == 0 || isNullOrUndefined(model.Doitac)) {
            swal({
                title: "@Html.Raw(Global.Message_Title)",
                text: "Vui lòng chọn đối tác",
                type: "error",
                timer: 4000,
                showConfirmButton: true,
            });
            return;
        }
        if (model.Sanphamvay == 0 || isNullOrUndefined(model.Sanphamvay)) {
            swal({
                title: "@Html.Raw(Global.Message_Title)",
                text: "Vui lòng chọn sản phẩm vay",
                type: "error",
                timer: 4000,
                showConfirmButton: true,
            });
            return;
        }


        if (isNullOrWhiteSpace(model.SDT)
            || model.SDT.length != 10) {
            swal({
                title: "@Html.Raw(Global.Message_Title)",
                text: "Số điện thoại di động phải đúng 10 số!",
                type: "error",
                timer: 4000,
                showConfirmButton: true,
            });
            return;
        }
        if (isNullOrWhiteSpace(model.SDT2)
            || model.SDT2.length != 10) {
            swal({
                title: "@Html.Raw(Global.Message_Title)",
                text: "Số điện thoại nhân viên phải đúng 10 số!",
                type: "error",
                timer: 4000,
                showConfirmButton: true,
            });
            return;
        }
        if (isNullOrWhiteSpace(model.CMND) ||
            (model.CMND.length != 9 && model.CMND.length != 12)) {
            swal({
                title: "@Html.Raw(Global.Message_Title)",
                text: "Số CMND chỉ 9 hoặc 12 số!",
                type: "error",
                timer: 4000,
                showConfirmButton: true,
            });
            return;
        }
        model.files = filesUpload
        $.ajax({
            traditional: true,
            url: '/hoso/submit',
            type: "POST",
            contentType: "application/json;",
            dataType: 'json',
            data: JSON.stringify(model),
            success: function (data) {
                if (data.success == true && data.data>0) {
                    swal({
                        title: "@Html.Raw(Global.Message_Title)",
                        text: data.Message.ErrorMessage,
                        type: "success",
                        timer: 4000,
                        showConfirmButton: true,
                    }, function () {
                            uploadHoso(hoso.ID,true);

                    });
                }
                else {
                    swal({
                        title: "@Html.Raw(Global.Message_Title)",
                        text: data.error.code,
                        type: "error",
                        timer: 4000,
                        showConfirmButton: true,
                    });
                }
            },
            error: function (jqXHR, exception) {
                showError(jqXHR, exception);
            },
            complete: function () {
                $('#panel_body').unblock();
            },
        });
    });
    </script>
